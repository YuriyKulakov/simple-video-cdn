env LB_ALGORITM;
env CACHE_PORTS_RANGE;
env NODES;
env REPLICAS_PER_CACHE;
env CACHE_POOL_SIZE;

events {
  worker_connections 1024;
}

error_log stderr;

http {
  lua_package_path '/usr/local/share/lua/5.1/?.lua;/usr/local/openresty/nginx/conf/load_balancer.lua;${prefix}../../?.lua;;';

  log_format lb '$remote_addr - - [$time_local]  '
                    '"$request" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent"';

  lua_shared_dict ports_load 10m;

  server {
    listen 8080;
    error_log /dev/stdout debug;
    access_log   /dev/stdout lb;

    add_header 'Access-Control-Allow-Origin' '*';
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
    add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';

    location ~ ".*\/(?<signal>.*)\/.*\.m3u8|mpd|ts|mp4$" {
      rewrite_by_lua_block {
        local load_balancer = require "load_balancer"
        load_balancer.cache()
      }
    }
  }
}
